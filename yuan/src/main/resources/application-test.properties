
server.port=80

##-----------project-----start----------------------------------------------------


##-----------project-----end----------------------------------------------------


# shardingsphere 的sql 日志不显示
spring.shardingsphere.props.sql.show=true
# 解决bean重名问题，重名原因是 build 与shardingsphere中的jdbc的bean重名
spring.main.allow-bean-definition-overriding=true
#打印sql 关闭分库sql查询内容
spring.shardingsphere.props.sql-show=false
### 配置数据源
spring.shardingsphere.datasource.names=ds0,ds1
## 配置第 1 个数据源
spring.shardingsphere.datasource.common.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/xiyangxixia?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=Yuan0228@%
### 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/yuan?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=Yuan0228@%
#
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
# 总体库表配置
spring.shardingsphere.rules.sharding.tables.yuan_log.actual-data-nodes=ds$->{0..1}.yuan_log_$->{0..1}
## 配置库，
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{log_id % 2}
# 配置表
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=yuan_log_$->{log_id % 2}

# 表分片键
spring.shardingsphere.rules.sharding.tables.yuan_log.table-strategy.standard.sharding-column=log_id
spring.shardingsphere.rules.sharding.tables.yuan_log.table-strategy.standard.sharding-algorithm-name=table-inline

# 库分片键
spring.shardingsphere.rules.sharding.tables.yuan_log.database-strategy.standard.sharding-column=log_id
spring.shardingsphere.rules.sharding.tables.yuan_log.database-strategy.standard.sharding-algorithm-name=database-inline


spring.shardingsphere.enabled=true
# mybatis-plus
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.auto-mapping-behavior=full
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.mapper-locations=classpath:com/wish/yuan/mapper/*/*.xml

##
###配置log4j2日志
logging.config=classpath:log4j2.yml

##-----------druid-----start----------------------------------------------------
##<!-- 配置初始化大小、最小、最大 -->
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-active=400
#<!-- 配置获取连接等待超时的时间 60秒-->
spring.datasource.druid.max-wait=60000
#<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
spring.datasource.druid.time-between-eviction-runs-millis=60000
#<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
spring.datasource.druid.min-evictable-idle-time-millis=60000
spring.datasource.druid.max-evictable-idle-time-millis=90000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
#spring.datasource.druid.max-open-prepared-statements= -1
#检测连接是否有效的语句，及超时时间
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.validation-query-timeout=30
#申请连接是否检测，归还连接是否检测 ，空闲是否检测
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#druid 日志输出
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false

#插件配置 监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#sql 合并，慢sql展示监控 超过20秒为慢sql
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=20000

spring.datasource.druid.web-stat-filter.enabled= true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=10
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled= true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#Ip白名单 黑名单 黑名单优先，黑名单中存在就不可访问。
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=
##-----------druid-----end----------------------------------------------------

##-----------redis-----start----------------------------------------------------
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=yuan0228
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=-1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000
##-----------redis-----end----------------------------------------------------
##-----------wish-----start----------------------------------------------------
wish.project.worker.id=1
wish.project.datacenter.id=10


##-----------wish-----end----------------------------------------------------


##-----------wish--order---start----------------------------------------------------

# 商户appid
wish.order.appId=2016101100660206

# 私钥 pkcs8格式的
wish.order.rsaPrivateKey=MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCAShBbTHF8wBjPr+15S8lsG5Om72VpityImjcsmT0bMX4kSn9cuaHqCjBo1oW/2L4OTlpinHQSR0zOh50RtzIabkYOh/agc6FeyAlyInR67OUb6xN7LA0/yRNznlW8bKl0ZDB5KSw/la9P6t/AXGdJ5Xf64cC2Pyecevqzl7u4FZsE/NiLbAs4MtVQnSqvetZjPRm5x3qQ62GeJU8hEB1UkqMAUZirlUE9XovvwXVewO03pqRIK8jxTdzHF55xmWCfETNOPeoWEO49KGDemNApCd2QhUo/Ofj1IDBoFFbVGIvMDwEWssObBE2DNHaUo/Ikjemw0RvEt5cGJr9wK/EhAgMBAAECggEABczTbn1HSD+bH5CxqOE/Sw74Hv0F1b68d8SZKAAJnjgfnt5rYbLW2jD5vVOtml3fQeBS/9BZAxaMJ25EMK/aqQ1BR5joEpsHubRLkQhzwbcCKL/5EoGMW8zofzqyX6F+C9AXzPKKmJlY4sEYuqay2MlyIjqgrtyuGsoImaQLjagDgQW62nlh/yJ1kxtF4fNVi62yQ5GBwOD+L3u7KcwU5drY19jMLzqjgfuv6hX2uSlyTeMUy1Xn6usR5let3GEG4Sa6xaI2wYJU0pUP0Ye81BEs8GD5iUWQEToNwedR7m3Z5y7r/hwwjX3I5k0cMwf6Nsa1LRYb7OfTIDwSki2HfQKBgQDo/s/Df/MAUAHZcxeZG1+CnIogMCj/AFlGfvKpd/X27LSPhK8J3U7m1caxCv6fmqc8UXaaWMydtRJYXRSL0LAyzZdchwopg4AZcww1lYgl6WHrFNfXECA+QkJiYhWEg+wACOI93CBK7FdXUVtknTUhJilL34CvMWz33b2Zo1DvSwKBgQCM9LQMTQd5R7WLf3JNehT6LezH1de8wzjvy3wHw5r/RcMPMH+8giwyb0QOlGuszVSTJi0K2XPL3baQpankOjE2nZV+RjW0rGQ4gFXZU/1d+awuIwopz1yovvOqQgk0JHAq5/70u4zMWBMjSZtWjhjqKDeFNjQVkgRgbVcFSuchwwKBgQDHMkKyY8t/MufB3tIIBg0L/4Vfq40BJm0tBg+0r2jMKObd5JQ5nMl+NLpgVoQGNBRST1tU7iJRmqMKhNmyB0L8zCRh6NnZUCHOoDuJ/EOgFf2vG+zEY3cNg1x5/F1lI9w6012JgY7iP1kUv+uhA36Ozq9zvKuqHFmLODqHBceGLQKBgBG7s28cvcT3TZK4PPQcWMlEv9ZAQ/z+fopEil0bscNNzoV5r4hSxCawMtq2t3ks9+fvVJlZ1CSgxxgZj28kFw7s8mLJiHYrfgxRsPs/gs+w2oWPaPbrnJeqNlOELU4/C1GKkFvPwJ3wsq+s0fsos1+6IYoD0LeqABz1hI4o5z0rAoGAZkExTBfJxKVcvDAVGdkVJuVabH+63i5wAblpM1CNOoDGNnRzGwQfW0NoRT/VML9vutukAd/okMli7mipikQ+B4clFgI1hQ+rUgMGR/DYsHdysrRf+mdPUteF/RVVXgRZdhKr7W1RICIZEgboUekkCLEOl4h6ngw0vrflGjRjuTs=

wish.order.rsaPublicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgEoQW0xxfMAYz6/teUvJbBuTpu9laYrciJo3LJk9GzF+JEp/XLmh6gowaNaFv9i+Dk5aYpx0EkdMzoedEbcyGm5GDof2oHOhXsgJciJ0euzlG+sTeywNP8kTc55VvGypdGQweSksP5WvT+rfwFxnSeV3+uHAtj8nnHr6s5e7uBWbBPzYi2wLODLVUJ0qr3rWYz0Zucd6kOthniVPIRAdVJKjAFGYq5VBPV6L78F1XsDtN6akSCvI8U3cxxeecZlgnxEzTj3qFhDuPShg3pjQKQndkIVKPzn49SAwaBRW1RiLzA8BFrLDmwRNgzR2lKPyJI3psNEbxLeXBia/cCvxIQIDAQAB

# 服务器异步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
wish.order.notifyUrl=

# 页面跳转同步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 商户可以自定义同步跳转地址
wish.order.returnUrl=

# 请求网关地址
wish.order.url=https://openapi.alipaydev.com/gateway.do
# 编码
wish.order.charset=UTF-8
# 返回格式
wish.order.format=json
# 支付宝公钥
wish.order.alipayPublicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAg8kGId/1Xwe6rKw5KZ4lMBkqEMw8B42/G4KknmKLM0Qdbxr6bngH2ASF3CIO4El2sFRBtKulCYLlQzqkg7sq3gc5jeim1yP6L2METTioUXCkEAA+Uf9jMKvTzUjf8KSDIg5y/ISwwlh2oDDirLkk23fOO3jImumQ3/ykrd/Q2NOhppHeAssLftWjE0ub1g4tf5Fv+qzVFt0kgjMs+VR+oVjXfskQAR9eVSt8tgkeCjonSZcmSS9fTHGXnC6f4QMmoN08Ttskj8Ye1Ge8g07rpJ4umvMndLqDBv3vIV+eXU+LtaCK86TBSr8qGe1XhlrQJgt14Goewx8rEcsGDSbpYwIDAQAB

#RSA2
wish.order.signType=RSA2

##-----------wish--order---end----------------------------------------------------
# AOP 监控拦截切入点
#spring.datasource.druid.aop-patterns=com.example.demo.mapper.*,com.example.demo.service.*，com.example.demo.web.*
#
#